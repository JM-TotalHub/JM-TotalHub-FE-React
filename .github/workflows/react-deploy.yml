name: 리액트 애플리케이션 배포

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: 환경 변수 로드
        id: load-env
        run: |
          echo "${{ secrets.REACT_APP_SERVER01_ENV }}" | while IFS= read -r line; do
            if [[ -n "$line" && "$line" != \#* ]]; then
              echo "$line" >> $GITHUB_ENV
            fi
          done

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v1

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 & 푸시
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/jm-total-hub:react-latest
          build-args: |
            REACT_APP_REACT_SERVER_ENV_STATUS=${{ env.REACT_APP_REACT_SERVER_ENV_STATUS }}
            REACT_APP_REACT_SERVER01_EC2_HOST=${{ env.REACT_APP_REACT_SERVER01_EC2_HOST }}
            REACT_APP_NGINX_SERVER01_EC2_HOST=${{ env.REACT_APP_NGINX_SERVER01_EC2_HOST }}

      # - name: 리액트 애플리케이션 빌드(eslint 비활성화)
      #   run: CI=false npm run build

      - name: 도커 컴포즈 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REACT_APP_REACT_SERVER01_EC2_HOST }}
          username: ${{ env.REACT_APP_REACT_SERVER01_EC2_USERNAME }}
          key: ${{ secrets.REACT_APP_REACT_SERVER01_EC2_PRIVATE_KEY }}
          script: |
            docker image prune -a -f --filter "until=12h"
            cd ~/react
            sudo -E docker-compose pull nginx
            sudo -E docker-compose up -d nginx
            sudo -E docker-compose logs nginx
